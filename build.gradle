// create a runnable jar with jar dependencies stored in lib subdirectory
tasks.whenTaskAdded { task ->
    ['startScripts', 'distTar'].each { String skipTaskName ->
        if (task.name.contains(skipTaskName)) {
            task.enabled = false
        }
    }
}
apply plugin: 'java'
apply plugin: 'application'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'edu.mcw.rgd.ApacheLogAnalysis'
String myAppName = 'log-analyzer'

project.archivesBaseName = myAppName

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.commons:commons-dbcp2:2.8.0'
    compile 'commons-net:commons-net:3.7'
	compile 'com.google.code.gson:gson:2.4'
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
	compile 'org.jsoup:jsoup:1.6.3'
    compile 'org.apache.logging.log4j:log4j-1.2-api:2.17.1' // log4j --> log4j2 bridge for FileDownloader in rgdcore
    compile 'org.apache.logging.log4j:log4j-api:2.17.1'
    compile 'org.apache.logging.log4j:log4j-core:2.17.1'
    compile 'com.oracle.database.jdbc:ojdbc8:19.6.0.0'
    compile 'org.springframework:spring-beans:5.3.5'
    compile 'org.springframework:spring-jdbc:5.3.5'
    compile 'com.io7m.xom:xom:1.2.10'

    compile fileTree(dir: 'lib', include: '*.jar')
}

jar {
    manifest {
        attributes(
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date(),
            'Built-JDK': System.getProperty('java.version'),
            'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
            'Main-Class': mainClassName
        )
    }
}

distributions {
    main {
        baseName = myAppName
    }
}

task createDistro(type: Copy) {
    def zipFile = file('build/distributions/'+myAppName+'.zip')
    def outputDir = file("build/install")

    from zipTree(zipFile)
    into outputDir
}
createDistro.dependsOn assembleDist
